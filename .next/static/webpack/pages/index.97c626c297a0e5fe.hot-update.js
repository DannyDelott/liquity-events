"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/liquity/contracts/lqtyStaking.ts":
/*!**********************************************!*\
  !*** ./src/liquity/contracts/lqtyStaking.ts ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LIQUITY_STAKING_ADDRESS\": function() { return /* binding */ LIQUITY_STAKING_ADDRESS; },\n/* harmony export */   \"LIQUITY_STAKING_DEPLOYMENT_BLOCK\": function() { return /* binding */ LIQUITY_STAKING_DEPLOYMENT_BLOCK; },\n/* harmony export */   \"lqtyStakingABI\": function() { return /* binding */ lqtyStakingABI; },\n/* harmony export */   \"useGetPendingETHGain\": function() { return /* binding */ useGetPendingETHGain; },\n/* harmony export */   \"useGetPendingLUSDGain\": function() { return /* binding */ useGetPendingLUSDGain; },\n/* harmony export */   \"useLiquityStaking\": function() { return /* binding */ useLiquityStaking; },\n/* harmony export */   \"useRealtimeTotalLQTYStakedUpdatedEvents\": function() { return /* binding */ useRealtimeTotalLQTYStakedUpdatedEvents; },\n/* harmony export */   \"useStakeChangedEvents\": function() { return /* binding */ useStakeChangedEvents; },\n/* harmony export */   \"useStakes\": function() { return /* binding */ useStakes; },\n/* harmony export */   \"useTotalLQTYStaked\": function() { return /* binding */ useTotalLQTYStaked; },\n/* harmony export */   \"useTotalLQTYStakedUpdatedEvents\": function() { return /* binding */ useTotalLQTYStakedUpdatedEvents; }\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wagmi */ \"./node_modules/wagmi/dist/index.js\");\n/* harmony import */ var _wagmi_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../wagmi/client */ \"./src/wagmi/client.ts\");\n\n\nconst LIQUITY_STAKING_ADDRESS = \"0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d\";\nconst LIQUITY_STAKING_DEPLOYMENT_BLOCK = 12178607;\n/**\n * Gets the user's current staked amount of LQTY.\n */ function useStakes(user) {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContractRead)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        functionName: \"stakes\",\n        args: [\n            user\n        ]\n    });\n}\n/**\n * Gets the total amount of LQTY currently staked in the system.\n */ function useTotalLQTYStaked() {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContractRead)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        functionName: \"totalLQTYStaked\"\n    });\n}\n/**\n * Gets the user's current pending LUSD gains, ie: the yield from borrowing fees\n * paid by users when borrowing LUSD in their trove. This gets withdrawn\n * whenever you change your stake or withdraw the gains directly.\n */ function useGetPendingLUSDGain(user) {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContractRead)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        functionName: \"getPendingLUSDGain\",\n        args: [\n            user\n        ]\n    });\n}\n/**\n * Gets the user's current pending ETH gains, ie: the yield from redemption fees\n * paid by users who pay back there loans. This gets withdrawn whenever you\n * change your stake or withdraw the gains directly.\n */ function useGetPendingETHGain(user) {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContractRead)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        functionName: \"getPendingETHGain\",\n        args: [\n            user\n        ]\n    });\n}\nfunction useLiquityStaking() {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContract)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        signerOrProvider: (0,_wagmi_client__WEBPACK_IMPORTED_MODULE_0__.provider)({\n            chainId: 1\n        })\n    });\n}\n/**\n * Grabs every time the staker changed the amount they staked, either adding\n * more LQTY to the staking contract or removing it.\n */ function useStakeChangedEvents(staker, fromBlockOrBlockhash, toBlock) {\n    const liquityStaking = useLiquityStaking();\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useQuery)([\n        \"StakeChanged\",\n        staker,\n        fromBlockOrBlockhash,\n        toBlock\n    ], {\n        queryFn: async ()=>{\n            return liquityStaking === null || liquityStaking === void 0 ? void 0 : liquityStaking.queryFilter(liquityStaking.filters[\"StakeChanged\"](staker, null), fromBlockOrBlockhash, toBlock);\n        }\n    });\n}\nfunction useRealtimeTotalLQTYStakedUpdatedEvents(listener) {\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useContractEvent)({\n        address: LIQUITY_STAKING_ADDRESS,\n        abi: lqtyStakingABI,\n        eventName: \"TotalLQTYStakedUpdated\",\n        listener,\n        chainId: 1\n    });\n}\n/**\n * Grabs every time the system's total staked LQTY amount changes. This gets\n * emitted in the same transaction as StakeChanged and can be used in\n * combination with StakeChanged to calculate historical pool share.\n */ function useTotalLQTYStakedUpdatedEvents(fromBlockOrBlockhash, toBlock, options) {\n    const liquityStaking = useLiquityStaking();\n    return (0,wagmi__WEBPACK_IMPORTED_MODULE_1__.useQuery)([\n        \"TotalLQTYStakedUpdated\",\n        fromBlockOrBlockhash,\n        toBlock\n    ], {\n        queryFn: async ()=>{\n            return liquityStaking === null || liquityStaking === void 0 ? void 0 : liquityStaking.queryFilter(liquityStaking.filters[\"TotalLQTYStakedUpdated\"](null), fromBlockOrBlockhash, toBlock);\n        },\n        enabled: (options === null || options === void 0 ? void 0 : options.enabled) || true\n    });\n}\nconst lqtyStakingABI = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_activePoolAddress\",\n                type: \"address\"\n            }\n        ],\n        name: \"ActivePoolAddressSet\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_borrowerOperationsAddress\",\n                type: \"address\"\n            }\n        ],\n        name: \"BorrowerOperationsAddressSet\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_account\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"EtherSent\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_F_ETH\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"F_ETHUpdated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_F_LUSD\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"F_LUSDUpdated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_lqtyTokenAddress\",\n                type: \"address\"\n            }\n        ],\n        name: \"LQTYTokenAddressSet\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_lusdTokenAddress\",\n                type: \"address\"\n            }\n        ],\n        name: \"LUSDTokenAddressSet\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"staker\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"newStake\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"StakeChanged\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_staker\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_F_ETH\",\n                type: \"uint256\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_F_LUSD\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"StakerSnapshotsUpdated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"staker\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"LUSDGain\",\n                type: \"uint256\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"ETHGain\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"StakingGainsWithdrawn\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_totalLQTYStaked\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"TotalLQTYStakedUpdated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"_troveManager\",\n                type: \"address\"\n            }\n        ],\n        name: \"TroveManagerAddressSet\",\n        type: \"event\"\n    },\n    {\n        inputs: [],\n        name: \"DECIMAL_PRECISION\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"F_ETH\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"F_LUSD\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"NAME\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"activePoolAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"borrowerOperationsAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_user\",\n                type: \"address\"\n            }\n        ],\n        name: \"getPendingETHGain\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_user\",\n                type: \"address\"\n            }\n        ],\n        name: \"getPendingLUSDGain\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_ETHFee\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseF_ETH\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_LUSDFee\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"increaseF_LUSD\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"isOwner\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"lqtyToken\",\n        outputs: [\n            {\n                internalType: \"contract ILQTYToken\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"lusdToken\",\n        outputs: [\n            {\n                internalType: \"contract ILUSDToken\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_lqtyTokenAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_lusdTokenAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_troveManagerAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_borrowerOperationsAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_activePoolAddress\",\n                type: \"address\"\n            }\n        ],\n        name: \"setAddresses\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        name: \"snapshots\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"F_ETH_Snapshot\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"F_LUSD_Snapshot\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_LQTYamount\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"stake\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        name: \"stakes\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"totalLQTYStaked\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"troveManagerAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_LQTYamount\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"unstake\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"receive\"\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/liquity/contracts/lqtyStaking.ts\n"));

/***/ })

});